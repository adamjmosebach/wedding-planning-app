{"ast":null,"code":"var _jsxFileName = \"/Users/adam_mosebach/Documents/General_Assembly/Projects/Wedding-Planning-App/vendor-connector/src/Reviews.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Reviews.css';\n\nfunction Reviews() {\n  const [records, updateRecords] = useState([]);\n  const [venueVisible, updateVenueVisible] = useState('visible');\n  const [djVisible, updateDjVisible] = useState('visible');\n  const [photogVisible, updatePhotogVisible] = useState('visible');\n  const [floristVisible, updateFloristVisible] = useState('visible');\n  const [vendorTypeSelect, updateVendorTypeSelect] = useState('venue'); // Get the records from Airtable\n\n  useEffect(() => {\n    async function apiGet() {\n      try {\n        const recordsObj = await axios.get('https://api.airtable.com/v0/appN3Jd5GDuwUR5wG/Table%201?&view=Grid%20view', {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`\n          }\n        });\n        updateRecords(recordsObj.data.records);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    apiGet();\n  }, []); // Helper function to display a review\n\n  function displayRecords(recordInput, vendorVar, vendorReview, vendor, vendorVisible) {\n    const record = recordInput.fields;\n\n    if (record[vendorReview]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `${vendorVisible}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, record.name, \" / \", /*#__PURE__*/React.createElement(\"a\", {\n        href: `mailto:${record.email}?subject=Your%20${record[vendorVar]}%20review%20on%20Vendor%20Connector`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 31\n        }\n      }, record.email)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, record[vendorVar], \" (\", vendor, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, record[vendorReview]));\n    }\n  } // If records exist, call displayRecords() to display records for each kind of vendor &\n\n\n  if (records.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"Venues:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hideVenue\",\n      name: \"venueCheckbox\",\n      value: \"visible\",\n      defaultChecked: true,\n      onChange: e => e.target.checked ? updateVenueVisible('visible') : updateVenueVisible('hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, \" DJs:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hideDj\",\n      name: \"djCheckbox\",\n      value: \"visible\",\n      defaultChecked: true,\n      onChange: e => e.target.checked ? updateDjVisible('visible') : updateDjVisible('hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \" Photographers:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hidePhotogs\",\n      name: \"photogsChecked\",\n      value: \"visible\",\n      defaultChecked: true,\n      onChange: e => e.target.checked ? updatePhotogVisible('visible') : updatePhotogVisible('hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, \" Florists:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hideFloriists\",\n      name: \"floristCheckbox\",\n      value: \"visible\",\n      defaultChecked: true,\n      onChange: e => e.target.checked ? updateFloristVisible('visible') : updateFloristVisible('hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => updateVendorTypeSelect(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"venue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Venue\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"dj\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"DJ\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"photog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Photographer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"florist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Florist\")), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, records.map(record => {\n      console.log(record);\n      return record.fields[vendorTypeSelect] && /*#__PURE__*/React.createElement(\"option\", {\n        value: record.fields[vendorTypeSelect],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 53\n        }\n      }, record.fields[vendorTypeSelect]);\n    })), records.map(record => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, displayRecords(record, 'venue', 'venueReview', 'Venue', venueVisible), displayRecords(record, 'dj', 'djReview', 'DJ', djVisible), displayRecords(record, 'photog', 'photogReview', 'Photographer', photogVisible), displayRecords(record, 'florist', 'floristReview', 'Florist', floristVisible))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n}\n\nexport default Reviews;","map":{"version":3,"sources":["/Users/adam_mosebach/Documents/General_Assembly/Projects/Wedding-Planning-App/vendor-connector/src/Reviews.js"],"names":["React","useEffect","useState","axios","Reviews","records","updateRecords","venueVisible","updateVenueVisible","djVisible","updateDjVisible","photogVisible","updatePhotogVisible","floristVisible","updateFloristVisible","vendorTypeSelect","updateVendorTypeSelect","apiGet","recordsObj","get","headers","Authorization","process","env","REACT_APP_AIRTABLE_KEY","data","err","console","log","displayRecords","recordInput","vendorVar","vendorReview","vendor","vendorVisible","record","fields","name","email","length","e","target","checked","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Reviews.css'\n\nfunction Reviews() {\n  const [records, updateRecords] = useState([]);\n  const [venueVisible, updateVenueVisible] = useState('visible');\n  const [djVisible, updateDjVisible] = useState('visible');\n  const [photogVisible, updatePhotogVisible] = useState('visible');\n  const [floristVisible, updateFloristVisible] = useState('visible');\n  const [vendorTypeSelect, updateVendorTypeSelect] = useState('venue')\n\n  // Get the records from Airtable\n  useEffect(() => {\n    async function apiGet() {\n      try {\n        const recordsObj = await axios.get(\n          'https://api.airtable.com/v0/appN3Jd5GDuwUR5wG/Table%201?&view=Grid%20view',\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n            },\n          }\n        );\n        updateRecords(recordsObj.data.records);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    apiGet();\n  }, []);\n\n  // Helper function to display a review\n  function displayRecords(recordInput, vendorVar, vendorReview, vendor, vendorVisible) {\n    const record = recordInput.fields\n    if (record[vendorReview]) {\n      return (\n        <div className={`${vendorVisible}`}>\n          <h2>{record.name} / <a href={`mailto:${record.email}?subject=Your%20${record[vendorVar]}%20review%20on%20Vendor%20Connector`}>{record.email}</a></h2>\n          <h3>{record[vendorVar]} ({vendor})</h3>\n          <p>{record[vendorReview]}</p>\n        </div>\n      )\n    }\n  }\n\n  // If records exist, call displayRecords() to display records for each kind of vendor &\n  if (records.length>0) {return (\n    <div>\n      <label>Venues:<input type='checkbox' id='hideVenue' name='venueCheckbox' value='visible' defaultChecked onChange={e => e.target.checked ? updateVenueVisible('visible') : updateVenueVisible('hidden')} /></label>\n\n      <label> DJs:<input type='checkbox' id='hideDj' name='djCheckbox' value='visible' defaultChecked onChange={e => e.target.checked ? updateDjVisible('visible') : updateDjVisible('hidden')} /></label>\n\n      <label> Photographers:<input type='checkbox' id='hidePhotogs' name='photogsChecked' value='visible' defaultChecked onChange={e => e.target.checked ? updatePhotogVisible('visible') : updatePhotogVisible('hidden')} /></label>\n\n      <label> Florists:<input type='checkbox' id='hideFloriists' name='floristCheckbox' value='visible' defaultChecked onChange={e => e.target.checked ? updateFloristVisible('visible') : updateFloristVisible('hidden')} /></label>\n      \n      <select onChange={e => updateVendorTypeSelect(e.target.value)}>\n        <option value=''></option>\n        <option value='venue'>Venue</option>\n        <option value='dj'>DJ</option>\n        <option value='photog'>Photographer</option>\n        <option value='florist'>Florist</option>\n      </select>\n\n      <select>\n        {records.map(record => {\n          console.log(record)\n          return record.fields[vendorTypeSelect] && <option value={record.fields[vendorTypeSelect]}>{record.fields[vendorTypeSelect]}</option>\n        })}\n      </select>\n      \n      {records.map(record => (\n        <div>\n          {displayRecords(record, 'venue', 'venueReview', 'Venue', venueVisible)}\n          {displayRecords(record, 'dj', 'djReview', 'DJ', djVisible)}\n          {displayRecords(record, 'photog', 'photogReview', 'Photographer', photogVisible)}\n          {displayRecords(record, 'florist', 'floristReview', 'Florist', floristVisible)}\n        </div>\n        ))}\n      </div>\n  )} else {\n    return <h1>Loading...</h1>;\n  }\n}\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}