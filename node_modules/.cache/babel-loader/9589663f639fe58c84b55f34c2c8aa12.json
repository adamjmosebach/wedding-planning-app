{"ast":null,"code":"var _jsxFileName = \"/Users/adam_mosebach/Documents/General_Assembly/Projects/Wedding-Planning-App/vendor-connector/src/CreateForm.js\";\nimport React, { useState } from 'react';\nimport FormComponent from './FormComponent';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction CreateForm() {\n  const [name, updateName] = useState('');\n  const [email, updateEmail] = useState('');\n  const [venue, updateVenue] = useState('');\n  const [dj, updateDj] = useState('');\n  const [photog, updatePhotog] = useState('');\n  const [florist, updateFlorist] = useState('');\n  const [venueReview, updateVenueReview] = useState('');\n  const [djReview, updateDjReview] = useState('');\n  const [photogReview, updatePhotogReview] = useState('');\n  const [floristReview, updateFloristReview] = useState(''); // Updates state values according to inputs\n\n  function inputHandler(e, action) {\n    e.preventDefault();\n    action(e.target.value);\n  } // Validates name and email. If correct, calls apiPost()\n\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    if (name !== '') {\n      if (email.includes('@') && email.includes('.')) {\n        apiPost();\n        useHistory();\n      } else {\n        alert('Must provide valid email');\n      }\n    } else {\n      alert('Must provide your name');\n    }\n  } // Post data entered by user into Airtable\n\n\n  async function apiPost() {\n    try {\n      const sendData = await axios.post('https://api.airtable.com/v0/appN3Jd5GDuwUR5wG/Table%201', {\n        fields: {\n          name: name,\n          email: email,\n          venue: venue,\n          venueReview: venueReview,\n          dj: dj,\n          djReview: djReview,\n          photog: photog,\n          photogReview: photogReview,\n          florist: florist,\n          floristReview: floristReview\n        }\n      }, {\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(sendData);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-email-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    onChange: e => inputHandler(e, updateName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    onChange: e => inputHandler(e, updateEmail),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 40\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vedor-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormComponent, {\n    field: \"Venue\",\n    vendorAction: updateVenue,\n    reviewAction: updateVenueReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormComponent, {\n    field: \"DJ\",\n    vendorAction: updateDj,\n    reviewAction: updateDjReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormComponent, {\n    field: \"Photography\",\n    vendorAction: updatePhotog,\n    reviewAction: updatePhotogReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormComponent, {\n    field: \"Florist\",\n    vendorAction: updateFlorist,\n    reviewAction: updateFloristReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Post My Reviews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default CreateForm;","map":{"version":3,"sources":["/Users/adam_mosebach/Documents/General_Assembly/Projects/Wedding-Planning-App/vendor-connector/src/CreateForm.js"],"names":["React","useState","FormComponent","axios","useHistory","CreateForm","name","updateName","email","updateEmail","venue","updateVenue","dj","updateDj","photog","updatePhotog","florist","updateFlorist","venueReview","updateVenueReview","djReview","updateDjReview","photogReview","updatePhotogReview","floristReview","updateFloristReview","inputHandler","e","action","preventDefault","target","value","submitHandler","includes","apiPost","alert","sendData","post","fields","headers","process","env","REACT_APP_AIRTABLE_KEY","console","log","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport FormComponent from './FormComponent'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom';\n\nfunction CreateForm() {\n\n  const [name, updateName] = useState('');\n  const [email, updateEmail] = useState('');\n\n  const [venue, updateVenue] = useState('');\n  const [dj, updateDj] = useState('');\n  const [photog, updatePhotog] = useState('');\n  const [florist, updateFlorist] = useState('');\n\n  const [venueReview, updateVenueReview] = useState('');\n  const [djReview, updateDjReview] = useState('');\n  const [photogReview, updatePhotogReview] = useState('');\n  const [floristReview, updateFloristReview] = useState('');\n\n  // Updates state values according to inputs\n  function inputHandler(e, action) {\n    e.preventDefault();\n    action(e.target.value);\n  }\n\n  // Validates name and email. If correct, calls apiPost()\n  function submitHandler(e) {\n    e.preventDefault();\n    if (name !== '') {\n      if (email.includes('@') && email.includes('.')) {\n        apiPost();\n        useHistory()\n      } else {\n        alert('Must provide valid email')\n      }\n    } else {\n      alert('Must provide your name')\n    }\n  }\n\n  // Post data entered by user into Airtable\n  async function apiPost() {\n    try {\n      const sendData = await axios.post('https://api.airtable.com/v0/appN3Jd5GDuwUR5wG/Table%201', {\n        fields: {\n          name: name,\n          email: email,\n          venue: venue,\n          venueReview: venueReview,\n          dj: dj,\n          djReview: djReview,\n          photog: photog,\n          photogReview: photogReview,\n          florist: florist,\n          floristReview: floristReview\n        }\n      }, {\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(sendData);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <div className='name-email-fields'>\n          <label htmlFor='name'>Name:<input type='text' id='name' onChange={e=>inputHandler(e,updateName)} /></label>\n          <label htmlFor='email'>Email:<input type='text' id='email' onChange={e=>inputHandler(e,updateEmail)} /></label>\n        </div>\n        <div className='vedor-fields'>\n          <FormComponent field='Venue' vendorAction={updateVenue} reviewAction={updateVenueReview} />\n          <FormComponent field='DJ' vendorAction={updateDj} reviewAction={updateDjReview} />\n          <FormComponent field='Photography' vendorAction={updatePhotog} reviewAction={updatePhotogReview} />\n          <FormComponent field='Florist' vendorAction={updateFlorist} reviewAction={updateFloristReview} />\n        </div>\n        <input type='submit' value='Post My Reviews'/>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateForm\n"]},"metadata":{},"sourceType":"module"}