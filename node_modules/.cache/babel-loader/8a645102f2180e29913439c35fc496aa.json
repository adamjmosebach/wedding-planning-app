{"ast":null,"code":"var _jsxFileName = \"/Users/adam_mosebach/Documents/General_Assembly/Projects/Wedding-Planning-App/vendor-connector/src/Reviews.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Reviews() {\n  const [records, updateRecords] = useState([]); // Get the records from Airtable\n\n  useEffect(() => {\n    async function apiGet() {\n      try {\n        const recordsObj = await axios.get('https://api.airtable.com/v0/appN3Jd5GDuwUR5wG/Table%201?&view=Grid%20view', {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`\n          }\n        });\n        updateRecords(recordsObj.data.records);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    apiGet();\n  }, []); // Helper function to display a review based on \n\n  function displayRecords(recordInput, vendorVar, vendorReview, vendor) {\n    const record = recordInput.fields;\n\n    if (record[vendorReview]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, record.name, \" / \", /*#__PURE__*/React.createElement(\"a\", {\n        href: `mailto:${record.email}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 31\n        }\n      }, record.email)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, record[vendorVar], \" (\", vendor, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, record[vendorReview]));\n    }\n  }\n\n  if (records !== []) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, records.map(record => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, displayRecords(record, 'venue', 'venueReview', 'Venue'), displayRecords(record, 'dj', 'djReview', 'DJ'), displayRecords(record, 'photog', 'photogReview', 'Photographer'), displayRecords(record, 'florist', 'floristReview', 'Florist'))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n}\n\nexport default Reviews;","map":{"version":3,"sources":["/Users/adam_mosebach/Documents/General_Assembly/Projects/Wedding-Planning-App/vendor-connector/src/Reviews.js"],"names":["React","useEffect","useState","axios","Reviews","records","updateRecords","apiGet","recordsObj","get","headers","Authorization","process","env","REACT_APP_AIRTABLE_KEY","data","err","console","log","displayRecords","recordInput","vendorVar","vendorReview","vendor","record","fields","name","email","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BJ,QAAQ,CAAC,EAAD,CAAzC,CADiB,CAGjB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeM,MAAf,GAAwB;AACtB,UAAI;AACF,cAAMC,UAAU,GAAG,MAAML,KAAK,CAACM,GAAN,CACvB,2EADuB,EAEvB;AACEC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AADrD;AADX,SAFuB,CAAzB;AAQAR,QAAAA,aAAa,CAACE,UAAU,CAACO,IAAX,CAAgBV,OAAjB,CAAb;AACD,OAVD,CAUE,OAAOW,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDT,IAAAA,MAAM;AACP,GAjBQ,EAiBN,EAjBM,CAAT,CAJiB,CAuBjB;;AACA,WAASY,cAAT,CAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,YAAhD,EAA8DC,MAA9D,EAAsE;AACpE,UAAMC,MAAM,GAAGJ,WAAW,CAACK,MAA3B;;AACA,QAAID,MAAM,CAACF,YAAD,CAAV,EAA0B;AACxB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,MAAM,CAACE,IAAZ,sBAAoB;AAAG,QAAA,IAAI,EAAG,UAASF,MAAM,CAACG,KAAM,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCH,MAAM,CAACG,KAA3C,CAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,MAAM,CAACH,SAAD,CAAX,QAA0BE,MAA1B,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,MAAM,CAACF,YAAD,CAAV,CAHF,CADF;AAOD;AACF;;AAED,MAAIjB,OAAO,KAAK,EAAhB,EAAoB;AAAC,wBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OAAO,CAACuB,GAAR,CAAYJ,MAAM,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,cAAc,CAACK,MAAD,EAAS,OAAT,EAAkB,aAAlB,EAAiC,OAAjC,CADjB,EAEGL,cAAc,CAACK,MAAD,EAAS,IAAT,EAAe,UAAf,EAA2B,IAA3B,CAFjB,EAGGL,cAAc,CAACK,MAAD,EAAS,QAAT,EAAmB,cAAnB,EAAmC,cAAnC,CAHjB,EAIGL,cAAc,CAACK,MAAD,EAAS,SAAT,EAAoB,eAApB,EAAqC,SAArC,CAJjB,CADD,CADD,CADiB;AAWnB,GAXF,MAWQ;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF;;AAED,eAAepB,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Reviews() {\n  const [records, updateRecords] = useState([]);\n\n  // Get the records from Airtable\n  useEffect(() => {\n    async function apiGet() {\n      try {\n        const recordsObj = await axios.get(\n          'https://api.airtable.com/v0/appN3Jd5GDuwUR5wG/Table%201?&view=Grid%20view',\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_AIRTABLE_KEY}`,\n            },\n          }\n        );\n        updateRecords(recordsObj.data.records);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    apiGet();\n  }, []);\n\n  // Helper function to display a review based on \n  function displayRecords(recordInput, vendorVar, vendorReview, vendor) {\n    const record = recordInput.fields\n    if (record[vendorReview]) {\n      return (\n        <div>\n          <h2>{record.name} / <a href={`mailto:${record.email}`}>{record.email}</a></h2>\n          <h3>{record[vendorVar]} ({vendor})</h3>\n          <p>{record[vendorReview]}</p>\n        </div>\n      )\n    }\n  }\n\n  if (records !== []) {return (\n      <div>\n      {records.map(record => (\n        <div>\n          {displayRecords(record, 'venue', 'venueReview', 'Venue')}\n          {displayRecords(record, 'dj', 'djReview', 'DJ')}\n          {displayRecords(record, 'photog', 'photogReview', 'Photographer')}\n          {displayRecords(record, 'florist', 'floristReview', 'Florist')}\n        </div>\n        ))}\n      </div>\n  )} else {\n    return <h1>Loading...</h1>;\n  }\n}\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}